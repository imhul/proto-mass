@keyframes starMove {
	from {
		background-position: 5% 5%;
	}
	to {
		background-position: 1300% 5%;
	}
}

.game-active {
	// cursor: url("../img/cur.gif") !important;

	// space background
	#bg-game {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background-color: #00011c;

		#tsparticles {
			canvas {
				min-height: 100vh;
			}
		}
	}

	#starship {
		position: absolute;
		background-repeat: repeat;
		background-position: 5% 5%;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		animation-name: starMove;
		animation-duration: 250s;
		animation-timing-function: linear;
		animation-iteration-count: infinite;
	}

	.unit-stats {
		position: absolute;
		bottom: 80px;
		opacity: .6;
		left: -25px;
		width: 80px;
		text-align: center;
		transform: rotateY(60deg);
		color: #fff;
		background-color: $transparent;
		z-index: 999;
	}

	// Isometric
	.react-isometric-map-wrapper {
		--p-ratio: 1.4142;
		--p-map-width: var(--map-width, 1);
		--p-map-height: var(--map-height, 1);
		--p-map-max-dimension: var(--map-max-dimension, var(--p-map-width));
		--p-tile-size: calc(var(--tile-size, 48) / var(--p-ratio));
		--p-v-tile-size: var(--tile-size, 48);
		--p-slab-size: var(--slab-size, 12);
		--p-size-unit: var(--size-unit, 1px);
		--p-margin-top: var(--margin-top, 12);
		--p-margin-left: var(--margin-left, 12);
		--p-margin-right: var(--margin-right, 12);
		--p-margin-bottom: var(--margin-bottom, 12);
		--p-center-y: calc(var(--p-map-max-dimension) * var(--p-tile-size) / 2);
		--p-map-offset-y: var(--map-offset-y, 0);
		--p-center-x: calc((var(--p-map-width) + var(--map-height) - 1) * var(--p-tile-size) / 2);
		width: calc(var(--p-size-unit) * (var(--p-v-tile-size) * (var(--p-map-width) + var(--p-map-height) + 5) / 2));
		height: calc(var(--p-size-unit) * (var(--p-map-offset-y) + var(--p-map-max-dimension) * var(--p-v-tile-size)));
		margin: 0 auto;
		z-index: 5;

		.react-isometric-map {
			width: calc(var(--p-map-width) * var(--p-tile-size) * var(--p-size-unit));
			height: calc(var(--p-map-height) * var(--p-tile-size) * var(--p-size-unit));
			display: grid;
			grid-template-columns: repeat(var(--p-map-width), calc(var(--p-size-unit) * var(--p-tile-size)));
			grid-template-rows: repeat(var(--p-map-height), calc(var(--p-size-unit) * var(--p-tile-size)));
			transform: translate(
					calc(var(--p-size-unit) * (var(--p-tile-size) * 3 - var(--p-tile-size))),
					calc(var(--p-size-unit) * (var(--p-center-y) + var(--p-map-offset-y)))
				)
				rotateX(60deg) rotateZ(45deg);
			transform-origin: right center;
			position: absolute;
			user-select: none;
			z-index: 6;
			& * {
				user-select: none;
			}
			& > .unit-wrapper {
				bottom: 62px !important;
				right: 80px !important;
				& > img {
					transform: rotateY(60deg);
				}
				.unit-stats {
					background-color: #3D435D;
				}
			}
			.react-isometric-object-wrapper {
				
				bottom: 1px;
				right: 5px;
			
				opacity: 0.5;
				pointer-events: none;
				--p-z: var(--z, 0);
				--p-elevation: calc(var(--z) * var(--p-slab-size) * var(--p-size-unit) * var(--p-ratio));
				--p-margin: calc(-1 * var(--p-size-unit) * var(--p-margin-bottom) * var(--p-ratio));
				position: relative;
				grid-column: calc(1 + var(--x));
				grid-row: calc(1 + var(--y));
				width: calc(var(--p-size-unit) * var(--p-tile-size));
				height: calc(var(--p-size-unit) * var(--p-tile-size));
				z-index: calc((var(--x) + var(--y) * var(--p-tile-size)) / 2 + 6);
				transform: rotateZ(-45deg) scale(var(--p-ratio));
				&.active {
					pointer-events: auto;
					opacity: 1;
				}
				&.dead {
					display: none;
				}
				.react-isometric-object {
					position: absolute;
					user-select: none;
					// bottom: calc(var(--object-height) - 42px);
					// left: -3px;
					left: calc(var(--p-size-unit) * (var(--p-tile-size) - var(--object-width) / var(--p-ratio)) / 2);
					--p-bottom: calc(var(--p-margin) + var(--p-elevation));
					bottom: var(--p-bottom);
					width: calc(var(--p-size-unit) * var(--object-width) / var(--p-ratio));
					height: calc(var(--p-size-unit) * var(--object-height) * 2 / var(--p-ratio));

					img {
						pointer-events: none;
						width: 100%;
						height: 100%;
					}
				}
			}
			.react-isometric-tile {
				--p-z: var(--z, 0);
				--p-left-z: var(--left-z, var(--p-z, 0));
				--p-right-z: var(--right-z, var(--p-z, 0));
				--p-elevation: calc(-1 * var(--z) * var(--p-slab-size) * var(--p-size-unit) * var(--p-ratio));
				grid-column: calc(1 + var(--x));
				grid-row: calc(1 + var(--y));
				position: relative;
				width: calc(var(--p-size-unit) * var(--p-tile-size));
				height: calc(var(--p-size-unit) * var(--p-tile-size));
				transform: translate(var(--p-elevation), var(--p-elevation));
				// z-index: calc((var(--x) + var(--y) * var(--p-tile-size)) / 2);
				z-index: 7;
				& > .floor {
					width: calc(var(--p-size-unit) * var(--p-tile-size));
					height: calc(var(--p-size-unit) * var(--p-tile-size));
					box-sizing: border-box;
					position: absolute;
					background: $transparent;
					border: 0;
					z-index: 8;
					// z-index: calc((var(--x) + var(--y) * var(--p-tile-size)) / 2 + 3);
				}
				& > .wall {
					box-sizing: border-box;
					position: absolute;
					background: white;
					&.left {
						border: 1px solid red;
						width: calc(var(--p-size-unit) * var(--p-tile-size));
						height: calc(var(--p-size-unit) * var(--p-slab-size) * var(--p-left-z) * var(--p-ratio));
						transform: translateY(calc(var(--p-size-unit) * var(--p-tile-size))) skewX(45deg);
						transform-origin: right top;
						z-index: calc((var(--x) + var(--y) * var(--p-tile-size)) / 2 + 2);
					}
					&.right {
						border: 1px solid blue;
						height: calc(var(--p-size-unit) * var(--p-tile-size));
						width: calc(var(--p-size-unit) * var(--p-slab-size) * var(--p-right-z) * var(--p-ratio));
						transform: translateX(calc(var(--p-size-unit) * var(--p-tile-size))) skewY(45deg);
						transform-origin: left top;
						z-index: calc((var(--x) + var(--y) * var(--p-tile-size)) / 2 + 1);
					}
				}
				.textures-group {
					pointer-events: none;
					position: relative;
					transform: rotateZ(-45deg) scale(var(--p-ratio));
					width: calc(var(--p-size-unit) * var(--p-tile-size));
					height: calc(var(--p-size-unit) * (var(--p-tile-size)));
					--p-inverse-ratio: calc(1.24266482568174);
					.floor {
						position: absolute;
						left: calc(
							var(--p-size-unit) * -1 * (var(--p-margin-left) + var(--p-tile-size) / 2) / var(--p-ratio) +
								1px
						);
						right: calc(var(--p-size-unit) * var(--p-margin-right) / var(--p-ratio));
						top: calc(-1 * var(--p-size-unit) * var(--p-margin-top) / var(--p-ratio) + 1px);
						bottom: calc(-1 * var(--p-size-unit) * var(--p-margin-bottom) / var(--p-ratio));
						transform-origin: center center;
						transform: scale(calc(1 / var(--p-ratio))) scaleY(2);
						z-index: calc((var(--x) + var(--y) * var(--p-tile-size)) / 2 + 4);
					}
					.top {
						position: absolute;
						top: calc(var(--p-size-unit) * (var(--p-tile-size)) / var(--p-ratio) - 1px);
						transform: scale(calc(1 / var(--p-ratio))) scaleY(2);
						&.left {
							left: calc(var(--p-size-unit) * -1 * (var(--p-tile-size) / 2) / var(--p-ratio) - 1px);
						}
						&.right {
							right: calc(var(--p-size-unit) * -1 * (var(--p-tile-size) / 2) / var(--p-ratio) - 1px);
						}
						z-index: calc((var(--x) + var(--y) * var(--p-tile-size)) / 2 + 3);
					}
					.middle {
						position: absolute;
						top: calc(
							var(--p-size-unit) * (var(--p-tile-size)) / var(--p-ratio) + var(--p-size-unit) *
								(var(--p-slab-size)) * var(--wall-index) * var(--p-ratio) - 1px
						);
						transform: scale(calc(1 / var(--p-ratio))) scaleY(2);
						&.left {
							left: calc(var(--p-size-unit) * -1 * (var(--p-tile-size) / 2) / var(--p-ratio) - 1px);
						}
						&.right {
							right: calc(var(--p-size-unit) * -1 * (var(--p-tile-size) / 2) / var(--p-ratio) - 1px);
						}
						z-index: calc((var(--x) + var(--y) * var(--p-tile-size)) / 2 + 3);
					}
					.bottom {
						transform: scale(calc(1 / var(--p-ratio))) scaleY(2);
						position: absolute;
						&.left {
							top: calc(
								var(--p-size-unit) * (var(--p-tile-size)) / var(--p-ratio) + var(--p-size-unit) *
									var(--p-slab-size) * var(--p-left-z) * var(--p-ratio)
							);
							left: calc(var(--p-size-unit) * -1 * (var(--p-tile-size) / 2) / var(--p-ratio) - 1px);
						}
						&.right {
							top: calc(
								var(--p-size-unit) * (var(--p-tile-size)) / var(--p-ratio) + var(--p-size-unit) *
									var(--p-slab-size) * var(--p-right-z) * var(--p-ratio)
							);
							right: calc(var(--p-size-unit) * -1 * (var(--p-tile-size) / 2) / var(--p-ratio) - 1px);
						}
						z-index: calc((var(--x) + var(--y) * var(--p-tile-size)) / 2 + 3);
					}
				}
			}
		}
	}

	.left-box {
		position: absolute;
		width: 200px;
		z-index: 999;
		left: 15px;
		top: 80px;
		& > * {
			margin-bottom: 15px;
		}
	}

	.right-box {
		position: absolute;
		width: 200px;
		z-index: 999;
		right: 15px;
		top: 80px;
		& > * {
			margin-bottom: 15px;
		}
	}

	.info-block {
		text-shadow: 2px 2px 0px $game-color-darkest;
		font-family: "PressStart2P-Regular";
		background-color: $game-color-dark;
		border: 3px solid $game-color;
		flex-direction: column;
		color: $game-color;
		font-size: 1em;
		display: flex;
		padding: 25px;
		z-index: 999;
		opacity: .5;
		width: 100%;
		.visibility {
			position: absolute;
			top: 0;
			right: 10px;
			font-size: 20px;
			svg {
				box-shadow: 2px 2px 0px $game-color-darkest;
			}
		}
		button {
			border: 2px solid $game-color;
			background-color: $game-color-darkest;
			margin: 0 5px;
		}
		.hover-box {
			word-break: break-word;
			.img-wrapper {
				max-width: 144px;
				img {
					width: 100%;
					height: auto;
				}
			}
		}
	}
}
